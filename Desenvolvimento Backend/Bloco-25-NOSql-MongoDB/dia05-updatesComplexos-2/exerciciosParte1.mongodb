// Find para exercios
use("class");
db.movies.find();
//Exercicio 1: Utilizando o operador $all , retorne todos os filmes que contenham action e adventure no array category .
use("class");
db.movies.find(
  {category: {
    $all:["action","adventure"]
  }},
);

//Exercicio 2:Agora retorne os filmes que contenham action no array category e possuem nota do IMDB maior do que 7 .
use("class");
db.movies.find(
  {
    $and: [
      {imdbRating:{$gt: 7}},
      {
        category: {
          $all: ["action"]
        }
      }
    ]
  }
);

//Exercicio 3:Adicione um array chamado ratings ao filme Batman com os seguintes valores: [85, 100, 102, 105] . Dica: lembre-se do operador $each visto no dia anterior.
use("class");
db.movies.updateOne(
  {title: "Batman"},
  {$push:
  {
    ratings: {
      $each: [85, 100, 102, 105]
    }
    }
  }
);

//Exercicio 4: Adicione um array chamado ratings ao filme Godzilla com os seguintes valores: [78, 52, 95, 102] .
use("class");
db.movies.updateOne(
  {title: "Godzilla"},
  {$push:
  {
    ratings: {
      $each:[78, 52, 95, 102]
    }
  }
  }
);

//Exercicio 5: Adicione um array chamado ratings ao filme Home Alone com os seguintes valores: [200, 99, 65] .

use("class");
db.movies.updateOne(
  {title: "Home Alone"},
  {$push:
  {
    ratings: {
      $each:[200, 99, 65]
    }
  }
  }
);

// Exercicio 6: Retorne todos os filmes com ratings maior do que 103 , exibindo apenas os campos title e ratings .

use("class");
db.movies.find(
  {ratings: {
    $elemMatch: {
      $gt: 103
    }
  }},
  {_id: 0, title:1, ratings: 1}
);

//Exercicio 7: Retorne todos os filmes com ratings entre 100 e 105 , exibindo apenas os campos title e ratings .

use("class");
db.movies.find(
  {ratings: {
    $elemMatch: {
      $gte: 100, $lte: 105
    }
  }},
  {_id: 0, title: 1, ratings: 1}
);

//Exercicio 8: Retorne todos os filmes com ratings entre 64 e 105 e divisíveis por 9 , exibindo apenas os campos title e ratings .

use("class");
db.movies.find(
  {ratings: {
    $elemMatch: {
      $gte: 64, $lte: 105, $mod:[9,0]
    }
  }},
  {_id: 0, title: 1, ratings: 1}
);

// Exercicio 9: Retorne os filmes da categoria adventure e com ratings maior do que 103 , exibindo apenas os campos title , ratings e category .
use("class");
db.movies.find(
  {
    $and: [
      {category: {
        $all: ["adventure"]
      }},
      {ratings: {
        $elemMatch: {
          $gt: 103
        }
      }}
    ]
  },
  {_id: 0, title: 1, category: 1, ratings: 1}
);

//Exercicio 10:Retorne somente o título de todos os filmes com dois elementos no array category .
use("class");
db.movies.find(
  {category: {
    $size: 2
  }},
  {title: 1, _id: 0}
);

//exercicio 11: Retorne somente o título de todos os filmes com quatro elementos no array ratings .
use("class");
db.movies.find(
  {ratings: {
    $size: 4
  }},
  {title: 1, _id: 0}
);
